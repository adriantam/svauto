#!/bin/bash
#
# stunnel        Sandvine stunnel
# chkconfig:    - 90 10
# description: stunnel used by Sandvine processes
#
# processname:  stunnel
# config: /usr/local/sandvine/etc/rc.conf
# pidfile: /var/run/svstunnel.pid
#

### BEGIN INIT INFO
# Provides: stunnel
# Required-Start: $local_fs $network msd
# Required-Stop: $local_fs $network msd
# Should-Start:
# Should-Stop:
# Default-Start:
# Default-Stop:
# Short-Description: Start and stop stunnel daemon
# Description: Stunnel used by MSD/CND for communication with SPB
### END INIT INFO

# Source function library (It's a Red Hat thing!)
. /etc/rc.d/init.d/functions-centos6

# Path to the executable.
#
SEXE=`which stunnel`
[ $? -ne 0 ] && exit 5

# Path to the configuration file.
#
CONF=/usr/local/etc/stunnel/svstunnel.conf

# Check the configuration file exists.
#
if [ ! -f $CONF ] ; then
    echo "The configuration file cannot be found"
    exit 6
fi

# Path to the pid file.
#
PIDFILE=`grep '^\s*pid' $CONF | head -n 1 | sed 's/ //g' | awk -F= '{ print $2 }'`
PIDFILE=${PIDFILE:-/var/run/svstunnel.pid}

# Path to the lock file.
#
LOCK_DIR=/var/lock/subsys/svstunnel

prog=stunnel

RETVAL=0

# Start stunnel as daemon.
#
start() {
    if ! mkdir $LOCK_DIR; then
        echo "stunnel is already running"
        exit 0
    else
        echo -n $"Starting $prog: "
        $SEXE $CONF
    fi

    RETVAL=$?
    [ $RETVAL -eq 0 ] && success
    echo
    if [ $RETVAL -ne 0 ]; then 
        rmdir $LOCK_DIR
    fi
    return $RETVAL
}


# Stop stunnel.
#
stop() {
    if [ ! -d $LOCK_DIR ]; then
        echo "stunnel is not running"
        exit 0
    else
        echo -n $"Shutting down $prog: "
        killproc -p $PIDFILE stunnel
        RETVAL=$?
        [ $RETVAL -eq 0 ]
        rmdir $LOCK_DIR
        echo
        return $RETVAL
    fi
}

# See how we were called.
case "$1" in
    start)
        start
    ;;
    stop)
        stop
    ;;
    restart)
        stop
        start
    ;;
    condrestart)
        if [ -d $LOCK_DIR ]; then
            stop
            start
        fi
   ;;
   status)
       status -p $PIDFILE stunnel
   ;;
   *)
    echo $"Usage: $0 {start|stop|restart|condrestart|status}"
    exit 1
esac
